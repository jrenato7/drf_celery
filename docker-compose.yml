version: '3.8'

services:
  web:
    image: drf_celery_web
    container_name: "drf_celery_app"
    build: ./drf_celery
    command: gunicorn drf_celery.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./drf_celery/:/app
    ports:
      - "5050:8000"
    env_file:
      - ./drf_celery/.env
    environment:
      - DJANGO_SETTINGS_MODULE=drf_celery.settings
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
    depends_on:
      - celery_broker
      - drf_celery_db
  drf_celery_db:
    container_name: "drf_celery_db"
    image: postgres:13.2-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - LC_ALL=C.UTF-8
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=drf_celery_db
    ports:
      - "5433:5432"
  celery_broker:
    container_name: "drf_celery_broker"
    image: rabbitmq:3.9-alpine
    restart: always
    ports:
      - "5672:5672"
  redis:
    container_name: "drf_celery_redis"
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
  celery_worker:
    container_name: "drf_celery_worker"
    image: drf_celery_web
    command: /start_celeryworker.sh
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=drf_celery.settings
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
    env_file:
      - ./drf_celery/.env
    depends_on:
      - redis
      - drf_celery_db
      - celery_broker
volumes:
  postgres_data:
